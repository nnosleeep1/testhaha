/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import card.ModelCard;
import connect.ConnectDB;
import dao.ChiTietHoaDon_DAO;
import dao.LoaiThuoc_DAO;
import dao.Thuoc_DAO;
import entity.LoaiThuoc;
import entity.Thuoc;
import entity.ThuocVaLuotBan;
import entity.ThuocvaDoanhThu;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.sql.SQLException;
import java.text.DecimalFormat;

import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JPanel;

import message.Notification;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo
 */
public class ThongKeThuoc extends JPanel {

    /**
     * Creates new form ThongKeThuoc
     */
    private static Thuoc_DAO thuoc_dao;
    private static ArrayList<Thuoc> list_Thuoc;
    private static ChiTietHoaDon_DAO cthd;
    private static ThuocVaLuotBan thuocvaluotban;
    private static DefaultTableModel model = null ;
    private static LoaiThuoc_DAO loaiThuoc_dao;
    private static ArrayList<LoaiThuoc> list_LoaiThuoc;
    public ThongKeThuoc() throws SQLException {
        initComponents();
        ConnectDB.connect();
        initCard();
        init();
        loadDataTable();
        updateLoaiThuoc();
        setupSearch();
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tf_Search = new javax.swing.JTextField();
        btn_Search = new javax.swing.JButton();
        cb_LoaiThuoc = new javax.swing.JComboBox<>();
        btn_ThuocHetHan = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jMonthChooser1 = new com.toedter.calendar.JMonthChooser();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableThuoc = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        card1 = new card.Card();
        card2 = new card.Card();

       

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm Kiếm\n", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        tf_Search.setText("Nhập tên thuốc");
        tf_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_SearchActionPerformed(evt);
            }
        });

        btn_Search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_Nhan/icons8-search-30.png"))); // NOI18N
        btn_Search.setText("Tìm Kiếm");
        btn_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SearchActionPerformed(evt);
            }
        });

        cb_LoaiThuoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn loại thuốc" }));
        cb_LoaiThuoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_LoaiThuocActionPerformed(evt);
            }
        });

        btn_ThuocHetHan.setBackground(new java.awt.Color(255, 0, 51));
        btn_ThuocHetHan.setText("Thuốc sắp hết hạn");
        btn_ThuocHetHan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ThuocHetHanActionPerformed(evt);
            }
        });

        jButton3.setText("Thuốc sắp hết ");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_Nhan/icons8-reload-50.png"))); // NOI18N
        jButton2.setText("Tải lại");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_Nhan/icons8-excel-4 (1).png"))); // NOI18N
        jButton4.setText("Xuất Excel");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(jButton4)
                        .addGap(50, 50, 50)
                        .addComponent(jButton2)
                        .addGap(0, 59, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(cb_LoaiThuoc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jMonthChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tf_Search)
                            .addComponent(btn_ThuocHetHan, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_Search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btn_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(tf_Search, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jMonthChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_LoaiThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_ThuocHetHan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );

        tableThuoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên thuốc", "Mã thuốc", "Số lượng tồn", "Hạn sử dụng", "Thuế", "Giá", "Số lượng bán", "Doanh thu"
            }
        ));
        tableThuoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableThuocMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableThuoc);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane2)
                .addGap(0, 0, 0))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                .addGap(8, 8, 8))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(card1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 295, Short.MAX_VALUE)
                .addComponent(card2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 21, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(card2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

       
    }// </editor-fold>//GEN-END:initComponents

    private void tf_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_SearchActionPerformed
       
        setupSearch();
        

     
        
     
    }//GEN-LAST:event_tf_SearchActionPerformed

    private void btn_ThuocHetHanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ThuocHetHanActionPerformed
        resetTable();
        list_Thuoc= thuoc_dao.getThuocHetHan1Thang();
        updateTable(list_Thuoc);


      
        
    }//GEN-LAST:event_btn_ThuocHetHanActionPerformed

    private void btn_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SearchActionPerformed
        resetTable();
        search();
    }//GEN-LAST:event_btn_SearchActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       resetTable();
       loadDataTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cb_LoaiThuocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_LoaiThuocActionPerformed
        String tenLoai= (String) cb_LoaiThuoc.getSelectedItem();
        resetTable();
        list_Thuoc=thuoc_dao.getThuocTheoLoai(tenLoai);
        updateTable(list_Thuoc);
    }//GEN-LAST:event_cb_LoaiThuocActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        resetTable();
        list_Thuoc=thuoc_dao.getThuocTonKhoThap();
        updateTable(list_Thuoc);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tableThuocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableThuocMouseClicked
        int i=tableThuoc.getSelectedRow();
        int month= jMonthChooser1.getMonth()+1;
        String tenThuoc=(String) tableThuoc.getValueAt(i, 1);
        int luotBan=(int) tableThuoc.getValueAt(i, 6);
        
        String str=(String) tableThuoc.getValueAt(i, 7);
        String numberStr = str.replaceAll("[^0-9]", "");
        double doanhThu=Double.parseDouble(numberStr);
        card1.setDataNormal(new ModelCard("Lượt bán "+tenThuoc+" trong tháng " +month, luotBan, 5, null));
        card2.setData(new ModelCard("Doanh thu "+tenThuoc+" trong tháng " +month, doanhThu, 10, null));
    }//GEN-LAST:event_tableThuocMouseClicked

    /**
     * @param args the command line arguments
     */
    

private void setupSearch() {
    
    tf_Search.setText("Tìm kiếm thuốc"); // Text mặc định khi không có gì trong trường

    tf_Search.addFocusListener(new FocusListener() {
        @Override
        public void focusGained(FocusEvent e) {
            // Xóa nội dung khi focus vào trường (nếu nội dung là mặc định)
            if (tf_Search.getText().equals("Tìm kiếm thuốc")) {
                tf_Search.setText(""); // Xóa nội dung mặc định khi focus
            }
            else{
                tf_Search.selectAll();
            }
        }

        @Override
        public void focusLost(FocusEvent e) {
            // Khôi phục nội dung mặc định nếu trường trống khi mất focus
            if (tf_Search.getText().trim().isEmpty()) {
                tf_Search.setText("Tìm kiếm thuốc"); // Khôi phục text mặc định nếu người dùng không nhập gì
            }
        }
    });
}



 public void search() {
    // Lấy từ khóa tìm kiếm và kiểm tra
    
    String query = tf_Search.getText().trim();
    
    // Kiểm tra nếu là text placeholder hoặc rỗng
    if (query.equals("Tìm kiếm thuốc") || query.isEmpty()) {
        Notification panel = new Notification(this, Notification.Type.WARNING, 
        Notification.Location.TOP_CENTER, "Vui lòng nhập từ khóa tìm kiếm");
        panel.showNotification();
        return;
    }
    
   
   
    Thuoc thuoc = null;
    boolean found = false;

    // Tìm theo mã
    thuoc = thuoc_dao.getThuocTheoMa(query);
    if (thuoc != null) {
        list_Thuoc.add(thuoc);
        found = true;
    } 
    
    // Nếu không tìm thấy theo mã, tìm theo tên
    if (!found) {
        thuoc = thuoc_dao.getThuocTheoTen(query);
        if (thuoc != null) {
            list_Thuoc.add(thuoc);
            found = true;
        }
    }

    // Cập nhật bảng nếu tìm thấy, hiển thị thông báo nếu không tìm thấy
    if (found) {
        updateTable(list_Thuoc);
    } else {
        Notification panel = new Notification(this, Notification.Type.WARNING,
            Notification.Location.TOP_CENTER, "Không tìm thấy thuốc");
        panel.showNotification();
    }
}

    public void initCard(){
        card1.setColorGradient(new java.awt.Color(211, 28, 215));
        card2.setBackground(new java.awt.Color(10, 30, 214));
        card2.setColorGradient(new java.awt.Color(72, 111, 252));
        //card3.setBackground(new java.awt.Color(194, 85, 1));
       // card3.setColorGradient(new java.awt.Color(255, 212, 99));
    }
    public void init(){
        thuoc_dao =new Thuoc_DAO();
        cthd= new ChiTietHoaDon_DAO();
        model = (DefaultTableModel) tableThuoc.getModel();   
        list_Thuoc = new ArrayList<>();
        loaiThuoc_dao = new LoaiThuoc_DAO();
        list_LoaiThuoc = new ArrayList<>();
    }
  
    public void loadDataTable(){
        int month= jMonthChooser1.getMonth()+1;
        //ArrayList<ThuocVaLuotBan> thuocVaLuotBan= new ArrayList<>();
        //thuocVaLuotBan = cthd.getThuocCoLuotBanCaoNhatTrongThang(1, 2024);
        list_Thuoc = thuoc_dao.getAllThuoc();
        updateTable(list_Thuoc); 
        
       
        try {
        ThuocVaLuotBan thuoc=cthd.getTop1ThuocCoLuotBanCaoNhatTrongThang(month, 2024);
        ThuocvaDoanhThu thuocvaDoanhThu=cthd.getTop1ThuocCoDoanhThuCaoNhatTrongThang(month, 2024);
        card1.setDataNormal(new ModelCard("Lượt bán cao nhất \n"+ thuoc.getThuoc().getTenThuoc(), thuoc.getLuotBan(), PROPERTIES, null));
        card2.setDataNormal(new ModelCard("Doanh thu cao nhất " + thuocvaDoanhThu.getThuoc().getTenThuoc(), thuocvaDoanhThu.getDoanhThu(), PROPERTIES, null));
        } catch (Exception e) {
            Notification panel = new Notification(this, Notification.Type.WARNING, 
            Notification.Location.TOP_CENTER, "Tháng "+ month +" chưa có dữ liệu");
            panel.showNotification();
           
        }
        
    }
   public void updateTable(ArrayList<Thuoc> arr) {
    DecimalFormat df = new DecimalFormat("#,##0.##");

    // Xóa hết các dòng trong bảng
    model.setRowCount(0);

    // Kiểm tra số cột trong bảng trước khi thêm
    int columnCount = model.getColumnCount();
    if (columnCount == 0) {
        System.out.println("Bảng chưa có cột, vui lòng kiểm tra lại việc khởi tạo bảng.");
        return;  // Nếu bảng chưa có cột, dừng lại để tránh lỗi.
    }

    // Duyệt qua danh sách thuốc và thêm vào bảng
    for (Thuoc thuoc : arr) {
        if (thuoc != null) {
            // Tạo mảng cho mỗi dòng
            Object[] row = {
                thuoc.getMaThuoc(),
                thuoc.getTenThuoc(),
                thuoc.getSoLuongTon(),
                thuoc.getHsd(),
                thuoc.getThue(),
                df.format(thuoc.getGia()) + " VND",
                cthd.getsoLuongBan(thuoc.getMaThuoc()),
                df.format(cthd.getDoanhThu(thuoc.getMaThuoc())) + " VND"
            };

            // Ensure the row length matches the column count before adding
            if (row.length == columnCount) {
                model.addRow(row);  // Thêm dòng vào bảng nếu số cột khớp
            } else {
                System.out.println("Số cột không khớp: row.length = " + row.length + ", columnCount = " + columnCount);
            }
        }
    }
}



    

    
    
   public void updateLoaiThuoc() {
    // Cập nhật loại thuốc vào combobox
    list_LoaiThuoc = loaiThuoc_dao.getAllLoaiThuoc();
    //cb_LoaiThuoc.removeAllItems();  // Xóa các mục cũ
    for (LoaiThuoc loaiThuoc : list_LoaiThuoc) {
        cb_LoaiThuoc.addItem(loaiThuoc.getTenLoai());
    }
}
    public void resetTable() {
       
    model.setRowCount(0);
    //tableThuoc.removeAll();
    list_Thuoc.clear();
    System.out.println("Số dòng trong bảng: " + model.getRowCount());
    System.out.println("Số cột trong bảng: " + model.getColumnCount());
    model = new DefaultTableModel(new Object[]{"Mã thuốc", "Tên thuốc", "Số lượng tồn", "HSD", "Thuế", "Giá", "Số lượng bán", "Doanh thu"}, 0);
    tableThuoc.setModel(model);

}
    
public static void main(String[] args) throws SQLException {
    JFrame frame = new JFrame("Thong Ke Thuoc");
   
    frame.setSize(800, 600);
    frame.add(new ThongKeThuoc());
    frame.setVisible(true);
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Search;
    private javax.swing.JButton btn_ThuocHetHan;
    private card.Card card1;
    private card.Card card2;
    private javax.swing.JComboBox<String> cb_LoaiThuoc;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private com.toedter.calendar.JMonthChooser jMonthChooser1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableThuoc;
    private javax.swing.JTextField tf_Search;
    // End of variables declaration//GEN-END:variables
}
